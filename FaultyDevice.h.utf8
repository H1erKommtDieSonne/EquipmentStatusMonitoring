#pragma once    //С‡С‚РѕР±С‹ РїРѕРґРєР»СЋС‡Р°Р»СЃСЏ 1 СЂР°Р·
#include <string>   //РґР»СЏ СЃС‚СЂРѕРє
#include <compare>  //РѕРїРµСЂР°С‚РѕСЂ <=>(СѓРЅРёРІРµСЂСЃР°Р»СЊРЅС‹Р№ РѕРїРµСЂР°С‚РѕСЂ СЃСЂР°РІРЅРµРЅРёСЏ_) С‚РѕР»СЊРєРѕ РЅР° СЃ++20
#include <cstdint>  //РґР»СЏ СѓРёРЅС‚РѕРІ
#include <stdexcept>    //РґР»СЏ РёСЃРєР»СЋС‡РµРЅРёР№
#include <sstream>  //РґР»СЏ РїРѕС‚РѕРєРѕРІ

///РїСЂРёРѕСЂРёС‚РµС‚ РѕР±СЃР»СѓР¶РёРІР°РЅРёСЏ: High > Low > None
enum class ServicePriority : uint8_t { None = 0, Low = 1, High = 2 };   //С‚РёРїРѕР±РµР·РѕРїР°СЃРЅРѕРµ РїРµСЂРµС‡РёСЃР»РµРЅРёРµ

class FaultyDevice { //РѕР±СЊСЏРІР»СЏСЋ РєР»Р°СЃСЃ
public:     //РґР»СЏ СЏСЃРЅРѕСЃС‚Рё РЅРµ РїСЂРёРІР°С‚
    FaultyDevice(std::string name,
        uint32_t address,
        ServicePriority prio,
        std::string fault)
        : name_(std::move(name)),   //Р·Р°Р±РёСЂР°РµРј СЃРѕРґРµСЂР¶РёРјРѕРµ Р±РµР· РєРѕРїРёРё(РћРїРўРёРњРёР—Р°Р¦РёРЇ)
        address_(address),  //СЃРµС‚РµРІРѕР№ Р°РґСЂРµСЃ 32 Р±РёС‚Р°
        priority_(prio),    //РџР Р